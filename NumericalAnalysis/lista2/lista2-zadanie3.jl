# autor: Tomasz Kulik

using Polynomials

p1=[1, -210.0, 20615.0,-1256850.0,
      53327946.0,-1672280820.0, 40171771630.0, -756111184500.0,
      11310276995381.0, -135585182899530.0,
      1307535010540395.0,     -10142299865511450.0,
      63030812099294896.0,     -311333643161390640.0,
      1206647803780373360.0,     -3599979517947607200.0,
      8037811822645051776.0,      -12870931245150988800.0,
      13803759753640704000.0,      -8752948036761600000.0,
      2432902008176640000.0]

p2=[1, -210.0-(1.0/2^29), 20615.0,-1256850.0,
      53327946.0,-1672280820.0, 40171771630.0, -756111184500.0,
      11310276995381.0, -135585182899530.0,
      1307535010540395.0,     -10142299865511450.0,
      63030812099294896.0,     -311333643161390640.0,
      1206647803780373360.0,     -3599979517947607200.0,
      8037811822645051776.0,      -12870931245150988800.0,
      13803759753640704000.0,      -8752948036761600000.0,
      2432902008176640000.0]


function Wilkinson_experiment(h)
  A=zeros(Float64, 21)
  for i=1:21
    A[i] = float64(h[22-i])
  end
  A=roots(Poly(A))

  function f_P(x::Complex{Float64})
    result = convert(Complex{Float64}, 0.0)
    for i=1:21
      result += h[22-i] * x^(i-1)
    end
    return result
  end

  function f_p(x::Complex{Float64})
    return (x-20)*(x-19)*(x-18)*(x-17)*(x-16)*(x-15)*(x-14)*(x-13)*(x-12)*(x-11)*(x-10)*(x-9)*(x-8)*(x-7)*(x-6)*(x-5)*(x-4)*(x-3)*(x-2)*(x-1)
  end

  for i=1:20
    print("|P(z",i,")|= ", abs(f_P(A[i])))
    print("\n")
    print("|p(z",i,")|= ", abs(f_p(A[i])))
    print("\n")
    print("|z",i,"-",i,"|= ", abs(A[i] - i))
    print("\n")
  end
end

println("Dane z wektora p1:")
Wilkinson_experiment(p1)
println("Dane z wektora p2:")
Wilkinson_experiment(p2)
